# -*- coding: utf-8 -*-
"""predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RLDAbEUmBP2abrqu8NE-emyaW9HGxw4X
"""

import time
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
import tensorflow_hub as hub
from PIL import Image
import argparse
import json

def process_image(image):
  """
  Scales the provided image to the required size for the model.

  Args:
    image: A PIL Image instance.

  Returns:
    A NumPy array representing the processed image.
  """
  IMG_SIZE=224
  image=tf.cast(image,tf.float32)
  image=tf.image.resize(image,(IMG_SIZE,IMG_SIZE))/255.0
  return image.numpy()

def predict(image_path,model,top_k):
    """
  Predicts the top K most likely classes for a given image.

  Args:
    image_path: Path to the image file.
    model: A TensorFlow Keras model.
    top_k: The number of top predictions to return.

  Returns:
    A tuple containing:
      - A list of top K class probabilities.
      - A list of corresponding class labels.
  """
  im=Image.open(image_path)
  image=np.asarray(im)
  processed_image=process_image(image)
  preds=model.predict(np.expand_dims(processed_image,axis=0))
  top_k_indices=np.argsort(preds)[0][-top_k:]
  top_k_probs=preds[0][top_k_indices]
  return top_k_probs , top_k_indices

if __name__=='__main__':
  parser=argparse.ArgumentParser()

  parser.add_argument('image_path')
  parser.add_argument('model_path')
  parser.add_argument('--top_k',type=int,default=5)
  parser.add_argument('--class_names')

  args=parser.parse_args()

model=tf.keras.models.load_model(args.model_path, custom_objects={'KerasLayer':hub.KerasLayer})
props , classes = predict(args.image_path,model,args.top_k)

if args.class_names:
  with open(args.class_names) as f:
    class_names=json.load(f)
  names_classes=[class_names.key(str(i+1)) for i in classes]

print(f"pops=[{props}]")
print(f"classes=[{names_classes}]")